<!DOCTYPE html>
<html lang="zh-TW">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ËÅ∑Áº∫ÊêúÂ∞ãÁµÑÁπîÂ∑•ÂÖ∑</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            line-height: 1.6;
            color: #333;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: white;
            border-radius: 12px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.2);
            overflow: hidden;
        }
        
        .header {
            background: linear-gradient(45deg, #2c5282, #3182ce);
            color: white;
            padding: 30px;
            text-align: center;
        }
        
        .header h1 {
            font-size: 2.5rem;
            margin-bottom: 10px;
        }
        
        .header p {
            font-size: 1.2rem;
            opacity: 0.9;
        }
        
        .tabs {
            display: flex;
            background: #f8f9fa;
            border-bottom: 1px solid #dee2e6;
        }
        
        .tab {
            flex: 1;
            padding: 15px 20px;
            background: #f8f9fa;
            border: none;
            cursor: pointer;
            font-size: 16px;
            transition: all 0.3s ease;
        }
        
        .tab.active {
            background: white;
            border-bottom: 3px solid #3182ce;
            color: #3182ce;
        }
        
        .tab:hover {
            background: #e9ecef;
        }
        
        .tab-content {
            display: none;
            padding: 30px;
        }
        
        .tab-content.active {
            display: block;
        }
        
        .week-schedule {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .day-card {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 25px;
            border-radius: 12px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }
        
        .day-card h3 {
            margin-bottom: 15px;
            font-size: 1.4rem;
        }
        
        .timer {
            background: rgba(255,255,255,0.2);
            padding: 15px;
            border-radius: 8px;
            margin-bottom: 15px;
            text-align: center;
        }
        
        .timer-display {
            font-size: 2rem;
            font-weight: bold;
        }
        
        .timer-controls {
            margin-top: 10px;
        }
        
        .btn {
            background: #3182ce;
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 6px;
            cursor: pointer;
            margin: 0 5px;
            transition: background 0.3s ease;
        }
        
        .btn:hover {
            background: #2c5282;
        }
        
        .btn.danger {
            background: #e53e3e;
        }
        
        .btn.danger:hover {
            background: #c53030;
        }
        
        .btn.small {
            padding: 4px 8px;
            font-size: 12px;
        }
        
        .company-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 15px;
        }
        
        .company-card {
            background: #f8f9fa;
            padding: 20px;
            border-radius: 8px;
            border-left: 4px solid #3182ce;
            transition: transform 0.2s ease;
        }
        
        .company-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }
        
        .company-card h4 {
            color: #2d3748;
            margin-bottom: 8px;
        }
        
        .company-card .tier {
            background: #3182ce;
            color: white;
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 12px;
            display: inline-block;
            margin-bottom: 8px;
        }
        
        .tier.tier-2 {
            background: #38a169;
        }
        
        .tier.tier-3 {
            background: #d69e2e;
        }
        
        .company-card a {
            color: #3182ce;
            text-decoration: none;
            font-size: 14px;
        }
        
        .company-card a:hover {
            text-decoration: underline;
        }
        
        .job-tracker {
            overflow-x: auto;
        }
        
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
            background: white;
        }
        
        th, td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #dee2e6;
        }
        
        th {
            background: #f8f9fa;
            font-weight: 600;
        }
        
        .add-job-form {
            background: #f8f9fa;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 20px;
        }
        
        .form-row {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
            margin-bottom: 15px;
        }
        
        .form-group {
            display: flex;
            flex-direction: column;
        }
        
        label {
            margin-bottom: 5px;
            font-weight: 500;
        }
        
        input, select {
            padding: 8px;
            border: 1px solid #d1d5db;
            border-radius: 4px;
        }
        
        .editable {
            background: #fff;
            border: 1px solid transparent;
            padding: 4px;
            border-radius: 4px;
            cursor: pointer;
            transition: all 0.2s ease;
        }
        
        .editable:hover {
            background: #f0f8ff;
            border-color: #3182ce;
        }
        
        .editing {
            border-color: #3182ce !important;
            background: #f0f8ff !important;
        }
        
        .job-stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
            gap: 15px;
            margin-bottom: 20px;
            padding: 20px;
            background: #f8f9fa;
            border-radius: 8px;
        }
        
        .stat-item {
            text-align: center;
        }
        
        .stat-number {
            font-size: 1.8rem;
            font-weight: bold;
            color: #3182ce;
            display: block;
        }
        
        .stat-label {
            font-size: 0.9rem;
            color: #666;
        }
        
        .keyword-rotation {
            background: #f8f9fa;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 20px;
        }
        
        .keyword-week {
            margin-bottom: 15px;
        }
        
        .keyword-list {
            display: flex;
            flex-wrap: wrap;
            gap: 8px;
            margin-top: 8px;
        }
        
        .keyword {
            background: #3182ce;
            color: white;
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 14px;
        }
        
        .progress-section {
            background: linear-gradient(135deg, #48bb78 0%, #38a169 100%);
            color: white;
            padding: 25px;
            border-radius: 12px;
            margin-bottom: 20px;
        }
        
        .progress-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 20px;
            margin-top: 15px;
        }
        
        .progress-item {
            text-align: center;
        }
        
        .progress-number {
            font-size: 2.5rem;
            font-weight: bold;
            display: block;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üéØ ËÅ∑Áº∫ÊêúÂ∞ãÁµÑÁπîÂ∑•ÂÖ∑</h1>
            <p>Êô∫ÊÖßÂûãËÅ∑Ê∂ØÁôºÂ±ïÁÆ°ÁêÜÁ≥ªÁµ±</p>
        </div>
        
        <div class="tabs">
            <button class="tab active" onclick="showTab('tracker')">ËÅ∑Áº∫ËøΩËπ§</button>
            <button class="tab" onclick="showTab('schedule')">ÈÄ±Á®ãÂÆâÊéí</button>
            <button class="tab" onclick="showTab('companies')">ÁõÆÊ®ôÂÖ¨Âè∏</button>
            <button class="tab" onclick="showTab('keywords')">ÈóúÈçµÂ≠óÁ≠ñÁï•</button>
            <button class="tab" onclick="showTab('progress')">ÈÄ≤Â∫¶Áµ±Ë®à</button>
        </div>
        
        <!-- ËÅ∑Áº∫ËøΩËπ§ -->
        <div class="tab-content active" id="tracker">
            <h2>üìä ËÅ∑Áº∫Áî≥Ë´ãËøΩËπ§</h2>
            
            <div class="job-stats" id="jobStats">
                <!-- Áµ±Ë®àÊï∏ÊìöÂ∞áÁî±JavaScriptÂãïÊÖãÁîüÊàê -->
            </div>
            
            <div class="add-job-form">
                <h3>Êñ∞Â¢ûËÅ∑Áº∫</h3>
                <div class="form-row">
                    <div class="form-group">
                        <label for="jobCompany">ÂÖ¨Âè∏</label>
                        <input type="text" id="jobCompany" placeholder="‰æãÔºöAstellas">
                    </div>
                    <div class="form-group">
                        <label for="jobTitle">ËÅ∑‰Ωç</label>
                        <input type="text" id="jobTitle" placeholder="‰æãÔºöInsights & Strategy Partner">
                    </div>
                    <div class="form-group">
                        <label for="jobSource">‰æÜÊ∫ê</label>
                        <select id="jobSource">
                            <option value="ÂÆòÁ∂≤">ÂÖ¨Âè∏ÂÆòÁ∂≤</option>
                            <option value="LinkedIn">LinkedIn</option>
                            <option value="104">104‰∫∫ÂäõÈäÄË°å</option>
                            <option value="ÁçµÈ†≠">ÁçµÈ†≠Êé®Ëñ¶</option>
                            <option value="ÂÖßÊé®">ÂÖßÈÉ®Êé®Ëñ¶</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="jobStatus">ÁãÄÊÖã</label>
                        <select id="jobStatus">
                            <option value="discovered">üîç ÁôºÁèæ‰∏≠</option>
                            <option value="preparing">üìù Ê∫ñÂÇô‰∏≠</option>
                            <option value="applied">‚úÖ Â∑≤Áî≥Ë´ã</option>
                            <option value="interviewing">üìû Èù¢Ë©¶‰∏≠</option>
                            <option value="closed">‚ùå Â∑≤ÁµêÊùü</option>
                        </select>
                    </div>
                </div>
                <button class="btn" onclick="addJob()">Êñ∞Â¢ûËÅ∑Áº∫</button>
            </div>
            
            <div class="job-tracker">
                <table id="jobTable">
                    <thead>
                        <tr>
                            <th>Êó•Êúü</th>
                            <th>ÂÖ¨Âè∏</th>
                            <th>ËÅ∑‰Ωç</th>
                            <th>‰æÜÊ∫ê</th>
                            <th>ÁãÄÊÖã</th>
                            <th>ÂÇôË®ª</th>
                            <th>Êìç‰Ωú</th>
                        </tr>
                    </thead>
                    <tbody id="jobTableBody">
                        <!-- ËÅ∑Áº∫Êï∏ÊìöÂ∞áÁî±JavaScriptÂãïÊÖãÁîüÊàê -->
                    </tbody>
                </table>
            </div>
        </div>
        
        <!-- ÈÄ±Á®ãÂÆâÊéí -->
        <div class="tab-content" id="schedule">
            <h2>üìÖ ÊØèÈÄ±ÊêúÂ∞ãË®àÂäÉ (3Â§© √ó 45ÂàÜÈêò)</h2>
            <div class="week-schedule">
                <div class="day-card">
                    <h3>Day 1: ÁõÆÊ®ôÂÖ¨Âè∏ÂÆòÁ∂≤</h3>
                    <div class="timer">
                        <div class="timer-display" id="timer1">45:00</div>
                        <div class="timer-controls">
                            <button class="btn" onclick="startTimer(1)">ÈñãÂßã</button>
                            <button class="btn" onclick="pauseTimer(1)">Êö´ÂÅú</button>
                            <button class="btn danger" onclick="resetTimer(1)">ÈáçÁΩÆ</button>
                        </div>
                    </div>
                    <strong>ÊôÇÈñìÂàÜÈÖç:</strong>
                    <ul>
                        <li>Ââç10ÂàÜÈêò: Ê™¢Ë¶ñjob alerts</li>
                        <li>‰∏≠Èñì30ÂàÜÈêò: 3-4ÂÆ∂ÂÖ¨Âè∏ÂÆòÁ∂≤</li>
                        <li>Âæå5ÂàÜÈêò: Êõ¥Êñ∞ËøΩËπ§Ë°®</li>
                    </ul>
                </div>
                
                <div class="day-card">
                    <h3>Day 2: LinkedIn + Ê±ÇËÅ∑Á∂≤Á´ô</h3>
                    <div class="timer">
                        <div class="timer-display" id="timer2">45:00</div>
                        <div class="timer-controls">
                            <button class="btn" onclick="startTimer(2)">ÈñãÂßã</button>
                            <button class="btn" onclick="pauseTimer(2)">Êö´ÂÅú</button>
                            <button class="btn danger" onclick="resetTimer(2)">ÈáçÁΩÆ</button>
                        </div>
                    </div>
                    <strong>ÊôÇÈñìÂàÜÈÖç:</strong>
                    <ul>
                        <li>Ââç15ÂàÜÈêò: LinkedIn JobsÊêúÂ∞ã</li>
                        <li>‰∏≠Èñì20ÂàÜÈêò: 104/1111/Indeed</li>
                        <li>Âæå10ÂàÜÈêò: ÁØ©ÈÅ∏ÂÑ≤Â≠òËÅ∑Áº∫</li>
                    </ul>
                </div>
                
                <div class="day-card">
                    <h3>Day 3: Áî≥Ë´ã + Á∂≤Áµ°Âª∫Á´ã</h3>
                    <div class="timer">
                        <div class="timer-display" id="timer3">45:00</div>
                        <div class="timer-controls">
                            <button class="btn" onclick="startTimer(3)">ÈñãÂßã</button>
                            <button class="btn" onclick="pauseTimer(3)">Êö´ÂÅú</button>
                            <button class="btn danger" onclick="resetTimer(3)">ÈáçÁΩÆ</button>
                        </div>
                    </div>
                    <strong>ÊôÇÈñìÂàÜÈÖç:</strong>
                    <ul>
                        <li>Ââç25ÂàÜÈêò: ÂÆåÊàê1-2‰ªΩÁî≥Ë´ã</li>
                        <li>Âæå20ÂàÜÈêò: LinkedIn networking</li>
                    </ul>
                </div>
            </div>
        </div>
        
        <!-- ÁõÆÊ®ôÂÖ¨Âè∏ -->
        <div class="tab-content" id="companies">
            <h2>üè¢ ÁõÆÊ®ôÂÖ¨Âè∏Ê∏ÖÂñÆ</h2>
            <div class="company-grid" id="companyGrid">
                <!-- ÂÖ¨Âè∏Âç°ÁâáÂ∞áÁî±JavaScriptÂãïÊÖãÁîüÊàê -->
            </div>
        </div>
        
        <!-- ÈóúÈçµÂ≠óÁ≠ñÁï• -->
        <div class="tab-content" id="keywords">
            <h2>üîç ÈóúÈçµÂ≠óËº™ÊõøÁ≠ñÁï•</h2>
            <div class="keyword-rotation">
                <div class="keyword-week">
                    <h4>Á¨¨1ÈÄ±ÈóúÈçµÂ≠óÁµÑÂêà</h4>
                    <div class="keyword-list">
                        <span class="keyword">Commercial Operations Analyst Taiwan</span>
                        <span class="keyword">Business Partner Pharmaceutical Asia</span>
                        <span class="keyword">Global Operations Specialist Remote</span>
                    </div>
                </div>
                
                <div class="keyword-week">
                    <h4>Á¨¨2ÈÄ±ÈóúÈçµÂ≠óÁµÑÂêà</h4>
                    <div class="keyword-list">
                        <span class="keyword">Market Access Operations</span>
                        <span class="keyword">Customer Operations Manager</span>
                        <span class="keyword">Platform Business Partner</span>
                    </div>
                </div>
                
                <div class="keyword-week">
                    <h4>Á¨¨3ÈÄ±ÈóúÈçµÂ≠óÁµÑÂêà</h4>
                    <div class="keyword-list">
                        <span class="keyword">Data Analytics Commercial</span>
                        <span class="keyword">Business Intelligence Pharma</span>
                        <span class="keyword">Operations Excellence Analyst</span>
                    </div>
                </div>
                
                <div class="keyword-week">
                    <h4>Á¨¨4ÈÄ±ÈóúÈçµÂ≠óÁµÑÂêà</h4>
                    <div class="keyword-list">
                        <span class="keyword">Regional Operations Manager</span>
                        <span class="keyword">Cross-functional Business Partner</span>
                        <span class="keyword">Commercial Strategy Operations</span>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- ÈÄ≤Â∫¶Áµ±Ë®à -->
        <div class="tab-content" id="progress">
            <h2>üìà Ê±ÇËÅ∑ÈÄ≤Â∫¶Áµ±Ë®à</h2>
            <div class="progress-section">
                <h3>Êú¨ÊúàÊàêÊûú</h3>
                <div class="progress-grid">
                    <div class="progress-item">
                        <span class="progress-number" id="totalApplied">0</span>
                        <span>Á∏ΩÁî≥Ë´ãÊï∏</span>
                    </div>
                    <div class="progress-item">
                        <span class="progress-number" id="totalInterviews">0</span>
                        <span>Èù¢Ë©¶Ê©üÊúÉ</span>
                    </div>
                    <div class="progress-item">
                        <span class="progress-number" id="responseRate">0%</span>
                        <span>ÂõûË¶ÜÁéá</span>
                    </div>
                    <div class="progress-item">
                        <span class="progress-number" id="weeklyTarget">10-15</span>
                        <span>ÈÄ±ÁõÆÊ®ô</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <script>
        // Timer functionality
        let timers = {1: null, 2: null, 3: null};
        let timeLeft = {1: 45*60, 2: 45*60, 3: 45*60};
        
        function startTimer(day) {
            if (timers[day]) return;
            
            timers[day] = setInterval(() => {
                timeLeft[day]--;
                updateDisplay(day);
                
                if (timeLeft[day] <= 0) {
                    clearInterval(timers[day]);
                    timers[day] = null;
                    alert(`Day ${day} ÁöÑ45ÂàÜÈêòÊêúÂ∞ãÊôÇÈñìÁµêÊùüÔºÅ`);
                }
            }, 1000);
        }
        
        function pauseTimer(day) {
            clearInterval(timers[day]);
            timers[day] = null;
        }
        
        function resetTimer(day) {
            clearInterval(timers[day]);
            timers[day] = null;
            timeLeft[day] = 45*60;
            updateDisplay(day);
        }
        
        function updateDisplay(day) {
            const minutes = Math.floor(timeLeft[day] / 60);
            const seconds = timeLeft[day] % 60;
            document.getElementById(`timer${day}`).textContent = 
                `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
        }
        
        // Tab functionality
        function showTab(tabName) {
            const contents = document.querySelectorAll('.tab-content');
            contents.forEach(content => content.classList.remove('active'));
            
            const tabs = document.querySelectorAll('.tab');
            tabs.forEach(tab => tab.classList.remove('active'));
            
            document.getElementById(tabName).classList.add('active');
            event.target.classList.add('active');
            
            if (tabName === 'companies') {
                loadCompanies();
            } else if (tabName === 'tracker') {
                loadJobs();
                updateJobStats();
            } else if (tabName === 'progress') {
                updateProgress();
            }
        }
        
        // Company data
        const companies = [
            {name: 'Eli Lilly', tier: 1, region: 'US', focus: 'GCDPÂπ≥Âè∞Â∞àÂÆ∂', website: 'https://www.lilly.com/careers'},
            {name: 'MSD', tier: 1, region: 'US', focus: 'Commercial Excellence', website: 'https://www.msd.com/careers'},
            {name: 'Roche', tier: 1, region: 'EU', focus: 'Data-Driven Decision', website: 'https://careers.roche.com'},
            {name: 'Novartis', tier: 1, region: 'EU', focus: 'Êï∏‰ΩçËΩâÂûãÈ†òÂÖà', website: 'https://www.novartis.com/careers'},
            {name: 'J&J', tier: 1, region: 'US', focus: 'Cross-functionalÂêà‰Ωú', website: 'https://jobs.jnj.com'},
            {name: 'Pfizer', tier: 2, region: 'US', focus: 'ÂÖ®ÁêÉÊúÄÂ§ßËó•Âª†', website: 'https://www.pfizer.com/careers'},
            {name: 'Abbott', tier: 2, region: 'US', focus: 'Ëó•ÂìÅ+ÈÜ´Êùê', website: 'https://www.abbott.com/careers'},
            {name: 'AstraZeneca', tier: 2, region: 'EU', focus: 'ËÖ´Áò§Â≠∏Âº∑È†Ö', website: 'https://careers.astrazeneca.com'},
            {name: 'GSK', tier: 2, region: 'EU', focus: 'Áñ´Ëãó+Ëó•ÂìÅ', website: 'https://www.gsk.com/careers'},
            {name: 'Sanofi', tier: 2, region: 'EU', focus: 'Ê≥ïÂúãË∑®ÂúãËó•Âª†', website: 'https://www.sanofi.com/careers'},
            {name: 'Takeda', tier: 3, region: 'Asia', focus: '‰∫ûÊ¥≤ÊúÄÂ§ßËó•Âª†', website: 'https://www.takeda.com/careers'},
            {name: 'Astellas', tier: 3, region: 'Asia', focus: 'Ê≥åÂ∞øËÖ´Áò§Â∞àÁßë', website: 'https://www.astellas.com/careers'}
        ];
        
        function loadCompanies() {
            const grid = document.getElementById('companyGrid');
            grid.innerHTML = '';
            
            companies.forEach(company => {
                const card = document.createElement('div');
                card.className = 'company-card';
                card.innerHTML = `
                    <div class="tier tier-${company.tier}">Tier ${company.tier}</div>
                    <h4>${company.name}</h4>
                    <p><strong>Âú∞ÂçÄ:</strong> ${company.region}</p>
                    <p><strong>ÁâπËâ≤:</strong> ${company.focus}</p>
                    <a href="${company.website}" target="_blank">ÂâçÂæÄCareerÈ†ÅÈù¢ ‚Üí</a>
                `;
                grid.appendChild(card);
            });
        }
        
        // Job tracking with inline editing
        let jobs = JSON.parse(localStorage.getItem('jobApplications')) || [];
        let editingCell = null;
        
        function addJob() {
            const company = document.getElementById('jobCompany').value;
            const title = document.getElementById('jobTitle').value;
            const source = document.getElementById('jobSource').value;
            const status = document.getElementById('jobStatus').value;
            
            if (!company || !title) {
                alert('Ë´ãÂ°´ÂØ´ÂÖ¨Âè∏ÂíåËÅ∑‰ΩçÂêçÁ®±');
                return;
            }
            
            const job = {
                id: Date.now(),
                date: new Date().toLocaleDateString('zh-TW'),
                company,
                title,
                source,
                status,
                notes: ''
            };
            
            jobs.unshift(job);
            localStorage.setItem('jobApplications', JSON.stringify(jobs));
            
            document.getElementById('jobCompany').value = '';
            document.getElementById('jobTitle').value = '';
            
            loadJobs();
            updateJobStats();
        }
        
        function loadJobs() {
            const tbody = document.getElementById('jobTableBody');
            tbody.innerHTML = '';
            
            if (jobs.length === 0) {
                const row = document.createElement('tr');
                row.innerHTML = '<td colspan="7" style="text-align: center; color: #666; padding: 20px;">ÈÇÑÊ≤íÊúâËÅ∑Áº∫Ë®òÈåÑÔºåÈñãÂßãÊ∑ªÂä†Á¨¨‰∏ÄÂÄãÂêßÔºÅ</td>';
                tbody.appendChild(row);
                return;
            }
            
            jobs.forEach((job, index) => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${job.date}</td>
                    <td class="editable" onclick="editCell(this, ${job.id}, 'company')" title="ÈªûÊìäÁ∑®ËºØ">${job.company}</td>
                    <td class="editable" onclick="editCell(this, ${job.id}, 'title')" title="ÈªûÊìäÁ∑®ËºØ">${job.title}</td>
                    <td>${job.source}</td>
                    <td>
                        <select onchange="updateStatus(${job.id}, this.value)">
                            <option value="discovered" ${job.status === 'discovered' ? 'selected' : ''}>üîç ÁôºÁèæ‰∏≠</option>
                            <option value="preparing" ${job.status === 'preparing' ? 'selected' : ''}>üìù Ê∫ñÂÇô‰∏≠</option>
                            <option value="applied" ${job.status === 'applied' ? 'selected' : ''}>‚úÖ Â∑≤Áî≥Ë´ã</option>
                            <option value="interviewing" ${job.status === 'interviewing' ? 'selected' : ''}>üìû Èù¢Ë©¶‰∏≠</option>
                            <option value="closed" ${job.status === 'closed' ? 'selected' : ''}>‚ùå Â∑≤ÁµêÊùü</option>
                        </select>
                    </td>
                    <td class="editable" onclick="editCell(this, ${job.id}, 'notes')" title="ÈªûÊìäÁ∑®ËºØ">${job.notes || 'ÈªûÊìäÊ∑ªÂä†ÂÇôË®ª...'}</td>
                    <td>
                        <button class="btn small" onclick="editJobRow(${job.id})" style="margin-right: 5px;">Á∑®ËºØ</button>
                        <button class="btn small danger" onclick="deleteJob(${job.id})">Âà™Èô§</button>
                    </td>
                `;
                tbody.appendChild(row);
            });
        }
        
        function editCell(cell, jobId, field) {
            if (editingCell) return; // Èò≤Ê≠¢Â§öÂÄãÁ∑®ËºØ
            
            editingCell = cell;
            const currentValue = field === 'notes' && cell.textContent === 'ÈªûÊìäÊ∑ªÂä†ÂÇôË®ª...' ? '' : cell.textContent;
            
            const input = document.createElement('input');
            input.value = currentValue;
            input.className = 'editing';
            input.style.width = '100%';
            input.style.border = '1px solid #3182ce';
            input.style.background = '#f0f8ff';
            
            cell.innerHTML = '';
            cell.appendChild(input);
            input.focus();
            input.select();
            
            function saveEdit() {
                const job = jobs.find(j => j.id === jobId);
                if (job) {
                    job[field] = input.value.trim();
                    localStorage.setItem('jobApplications', JSON.stringify(jobs));
                }
                
                cell.textContent = input.value.trim() || (field === 'notes' ? 'ÈªûÊìäÊ∑ªÂä†ÂÇôË®ª...' : '');
                cell.classList.remove('editing');
                editingCell = null;
                
                if (field === 'notes') updateJobStats();
            }
            
            function cancelEdit() {
                cell.textContent = currentValue || (field === 'notes' ? 'ÈªûÊìäÊ∑ªÂä†ÂÇôË®ª...' : '');
                cell.classList.remove('editing');
                editingCell = null;
            }
            
            input.addEventListener('blur', saveEdit);
            input.addEventListener('keydown', function(e) {
                if (e.key === 'Enter') {
                    e.preventDefault();
                    saveEdit();
                } else if (e.key === 'Escape') {
                    e.preventDefault();
                    cancelEdit();
                }
            });
        }
        
        function editJobRow(id) {
            const job = jobs.find(j => j.id === id);
            if (!job) return;
            
            // ÂâµÂª∫Á∞°ÂñÆÁöÑÁ∑®ËºØË°®ÂñÆ
            const editForm = document.createElement('div');
            editForm.style.position = 'fixed';
            editForm.style.top = '50%';
            editForm.style.left = '50%';
            editForm.style.transform = 'translate(-50%, -50%)';
            editForm.style.background = 'white';
            editForm.style.padding = '30px';
            editForm.style.borderRadius = '12px';
            editForm.style.boxShadow = '0 10px 30px rgba(0,0,0,0.3)';
            editForm.style.zIndex = '1000';
            editForm.style.minWidth = '400px';
            
            const overlay = document.createElement('div');
            overlay.style.position = 'fixed';
            overlay.style.top = '0';
            overlay.style.left = '0';
            overlay.style.width = '100%';
            overlay.style.height = '100%';
            overlay.style.background = 'rgba(0,0,0,0.5)';
            overlay.style.zIndex = '999';
            
            editForm.innerHTML = `
                <h3 style="margin-bottom: 20px; color: #2d3748;">Á∑®ËºØËÅ∑Áº∫</h3>
                <div style="margin-bottom: 15px;">
                    <label style="display: block; margin-bottom: 5px; font-weight: 500;">ÂÖ¨Âè∏ÂêçÁ®±</label>
                    <input type="text" id="editCompanyInput" value="${job.company}" style="width: 100%; padding: 8px; border: 1px solid #d1d5db; border-radius: 4px;">
                </div>
                <div style="margin-bottom: 20px;">
                    <label style="display: block; margin-bottom: 5px; font-weight: 500;">ËÅ∑‰ΩçÂêçÁ®±</label>
                    <input type="text" id="editTitleInput" value="${job.title}" style="width: 100%; padding: 8px; border: 1px solid #d1d5db; border-radius: 4px;">
                </div>
                <div style="text-align: right;">
                    <button id="cancelEdit" class="btn" style="margin-right: 10px; background: #6b7280;">ÂèñÊ∂à</button>
                    <button id="saveEdit" class="btn" style="background: #38a169;">‰øùÂ≠ò</button>
                </div>
            `;
            
            document.body.appendChild(overlay);
            document.body.appendChild(editForm);
            
            document.getElementById('editCompanyInput').focus();
            
            function closeEdit() {
                document.body.removeChild(overlay);
                document.body.removeChild(editForm);
            }
            
            document.getElementById('cancelEdit').onclick = closeEdit;
            overlay.onclick = closeEdit;
            
            document.getElementById('saveEdit').onclick = function() {
                const newCompany = document.getElementById('editCompanyInput').value.trim();
                const newTitle = document.getElementById('editTitleInput').value.trim();
                
                if (!newCompany || !newTitle) {
                    alert('Ë´ãÂ°´ÂØ´ÂÖ¨Âè∏ÂíåËÅ∑‰ΩçÂêçÁ®±');
                    return;
                }
                
                job.company = newCompany;
                job.title = newTitle;
                localStorage.setItem('jobApplications', JSON.stringify(jobs));
                loadJobs();
                updateJobStats();
                
                closeEdit();
            };
            
            // ÊîØÊè¥EnterÈçµ‰øùÂ≠ò
            editForm.addEventListener('keydown', function(e) {
                if (e.key === 'Enter' && !e.shiftKey) {
                    e.preventDefault();
                    document.getElementById('saveEdit').click();
                } else if (e.key === 'Escape') {
                    closeEdit();
                }
            });
        }
        
        function updateStatus(id, newStatus) {
            const job = jobs.find(j => j.id === id);
            if (job) {
                job.status = newStatus;
                localStorage.setItem('jobApplications', JSON.stringify(jobs));
                updateJobStats();
                updateProgress();
            }
        }
        
        function deleteJob(id) {
            // ‰ΩøÁî®ÈõôÈáçÁ¢∫Ë™ç‰æÜÊõø‰ª£confirm
            const job = jobs.find(j => j.id === id);
            if (!job) return;
            
            const confirmBtn = event.target;
            const originalText = confirmBtn.textContent;
            
            if (originalText === 'Âà™Èô§') {
                confirmBtn.textContent = 'Á¢∫ÂÆöÂà™Èô§Ôºü';
                confirmBtn.style.background = '#ff4444';
                
                setTimeout(() => {
                    confirmBtn.textContent = originalText;
                    confirmBtn.style.background = '#e53e3e';
                }, 3000);
                
            } else if (confirmBtn.textContent === 'Á¢∫ÂÆöÂà™Èô§Ôºü') {
                jobs = jobs.filter(j => j.id !== id);
                localStorage.setItem('jobApplications', JSON.stringify(jobs));
                loadJobs();
                updateJobStats();
            }
        }
        
        function updateJobStats() {
            const stats = {
                total: jobs.length,
                discovered: jobs.filter(j => j.status === 'discovered').length,
                preparing: jobs.filter(j => j.status === 'preparing').length,
                applied: jobs.filter(j => j.status === 'applied').length,
                interviewing: jobs.filter(j => j.status === 'interviewing').length,
                closed: jobs.filter(j => j.status === 'closed').length
            };
            
            const statsContainer = document.getElementById('jobStats');
            if (statsContainer) {
                statsContainer.innerHTML = `
                    <div class="stat-item">
                        <span class="stat-number">${stats.total}</span>
                        <span class="stat-label">Á∏ΩÊï∏</span>
                    </div>
                    <div class="stat-item">
                        <span class="stat-number">${stats.discovered}</span>
                        <span class="stat-label">üîç ÁôºÁèæ‰∏≠</span>
                    </div>
                    <div class="stat-item">
                        <span class="stat-number">${stats.preparing}</span>
                        <span class="stat-label">üìù Ê∫ñÂÇô‰∏≠</span>
                    </div>
                    <div class="stat-item">
                        <span class="stat-number">${stats.applied}</span>
                        <span class="stat-label">‚úÖ Â∑≤Áî≥Ë´ã</span>
                    </div>
                    <div class="stat-item">
                        <span class="stat-number">${stats.interviewing}</span>
                        <span class="stat-label">üìû Èù¢Ë©¶‰∏≠</span>
                    </div>
                    <div class="stat-item">
                        <span class="stat-number">${stats.closed}</span>
                        <span class="stat-label">‚ùå Â∑≤ÁµêÊùü</span>
                    </div>
                `;
            }
        }
        
        function updateProgress() {
            const applied = jobs.filter(j => j.status === 'applied').length;
            const interviews = jobs.filter(j => j.status === 'interviewing').length;
            const responseRate = applied > 0 ? Math.round((interviews / applied) * 100) : 0;
            
            document.getElementById('totalApplied').textContent = applied;
            document.getElementById('totalInterviews').textContent = interviews;
            document.getElementById('responseRate').textContent = responseRate + '%';
        }
        
        // Initialize
        document.addEventListener('DOMContentLoaded', function() {
            loadCompanies();
            loadJobs();
            updateJobStats();
            updateProgress();
        });
    </script>
</body>
</html>
